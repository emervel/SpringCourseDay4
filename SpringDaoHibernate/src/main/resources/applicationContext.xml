<?xml version="1.0" encoding="UTF-8" ?>
<!--
  - Contexto de aplicación
  - Ejemplo de acceso a datos con Hibernate
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--Bean para cargar el fichero de propiedades--> 
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
       id="propertyConfigurer" name="configuradorPropiedades">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!--Esta es la parte que nos crea la fuente de datos (el data source)
    de tipo BasicDataSource con los datos de mi bbdd derby-->
    <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
       id="dataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
 
    <!--Este es el gestor de transacciones-->
    <bean class="org.springframework.orm.hibernate3.HibernateTransactionManager"
       id="transactionManager" name="GestorTransacciones">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!--En Hibernate tenemos que crear un sessionFactory por BBDD usando un bean singleton como este
        para que sepamos donde está la BBDD. Cuando Spring instancie este, se arrancará Hibernate.
        Le pasamos la factory de sesiones, el datasource y los archivos de mapeo hbm.xml entre objetos
        y tablas. Además le ponermos el hibernateProperties que será lo mismo que el el hibernate.cfg.xml
    -->
    <bean class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
       id="sessionFactory" name="factoriaSesion">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>Persona.hbm.xml</value>
                <value>Aficion.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}
                </prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}
                </prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}
                </prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}
                </prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.auto}
                </prop>
            </props>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
                </entry>
            </map>
        </property>
    </bean>
</beans>